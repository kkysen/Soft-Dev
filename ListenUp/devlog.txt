Best Bootstrap Bubbles
Bayan Berri
Naotake Kinoshita
Brian Leung
Khyber Sen
pd 7
---------------------


/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Musixmatch didn't censor curse words so we had to do that.

We had to cache API responses, especially for Watson,
so that we didn't immediately go over our limit, and so our website doesn't take forever to load.

Managed to download Watson audio (with is very slow) semi-asynchronously,
so the website doesn't appear as slow sometimes.

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Learned about defining functions within functions
Learned about python classes


MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Database schema changed to have only three tables.
Customize clarification: increased likelihood of those questions, not guaranteed only those quesitons.
Can't customize right after logging in regardless of the number of points.
      Has to be earned each time

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Nice documentation really makes everything easier
Always have a back up

||||||||||||||||||||||||||||||||||||||||||

 ______   ______   __   __   __       ______   _______
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/


__________      __________      __________
\______   \     \______   \     \______   \
 |    |  _/      |    |  _/      |    |  _/
 |    |   \      |    |   \      |    |   \
 |______  / /\   |______  / /\   |______  / /\
        \/  \/          \/  \/          \/  \/

==============================================================

bayanB -- 2017-11-17 08:13:47
Login welcome and register

khyberS -- 2017-11-17 09:10:26
Added util files from last project.

naotakaK -- 2017-11-17 13:09:59
added functions for musixmatch

bayanB -- 2017-11-17 19:13:05
customize template done

bayanB -- 2017-11-18 10:34:39
fixed design doc

khyberS -- 2017-11-18 11:37:53
Added ListenUpDatabase class as a DB wrapper that exposes all the necessary APIs/methods
    needed in the app (i.e. the flask part).
ListenUpDatabase uses the classes User, Question, and Song that hold all the data
    that is stored in the corresponding DB tables.
There a few exceptions for User:
    The password isn't stored in the User so that it's secure.
    User also stores info specific to a single game/session the user plays,
        which changes every time and is not persisted in the DB.
Question and Song have a mutable audio_path:
    They need to download the audio from the Watson Text-to-Speech API.
    This isn't done immediately by the other APIs that retrieve the text,
    but instead, Question and Song have a download_audio() method
    that downloads the audio and adds the path to the object.
The Python hooks for the web APIs used, the music, text-to-speech, and trivia questions,
    are exposed in the modules in api/: music.py, text_to_speech.py, and trivia.py.
    We still need to implement these; I finished the text_to_speech one.
Question, Song, and ListenUpDatabase use these APIs to maintain the application state.
All the API keys, etc. are stored in secrets.py right now and are imported into the api modules.
    I didn't add secrets.py to the repo, but I can send it privately.
    We can always easily change the format of the secrets, too.
The real app.py is in core/.
    It has all the routes and stuff, but the app.py we run is still in the main directory.
    It just calls the other app.py's run() function.
app.py is filled with some of the same routes from the last project that deal with accounts.
app.py also has a bunch of unimplemented routes
    that do some of the other stuff our website is supposed to do.
I'm not exactly sure how the templates already created are meant to interact with Flask,
    so I tried to coordinate them where I could, but for some of the stuff I'm not sure.

khyberS -- 2017-11-19 10:43:15
Fixed bugs in ListenUpDatabase, incl. forgetting to commit the DB.

naotakaK -- 2017-11-19 18:32:44
get_song returns artist, title and song id

brianL -- 2017-11-21 01:37:34
I made the get trivia questions function. It's somewhat customizable

brianL -- 2017-11-21 13:18:52
changed trivia.py to use requests instead of urllib2

khyberS -- 2017-11-21 15:35:38
Changed answer_questions() route to render_template() won.jinja2 if the user has won,
    instead of just passing a boolean to questions.jinja2, the normal template.
Also realized that ListenUpDatabase.add_questions() need to check for duplicated questions
    returned by the API, so that the database questions remain unique.
    I didn't fix this yet, but I will.

bayanB -- 2017-11-21 20:44:15
Created a questions.html and congrats.html. Congrats just prints congrats {{user}} and links to customize and logout. and questions will print the question and answer choices

naotakaK -- 2017-11-22 11:33:22
Updated music.py to allow for bleeping of bad words. random_song doesn't return anything yet, but has all the appropriate values (artist, lyrics, title, track_id)

naotakaK -- 2017-11-22 12:49:35
Removed API key from file and made get_song return a particular song instead of random
Added new ASCII to devlog, and cleaned up api/music.py

bayanB -- 2017-11-22 12:16:31
Completed the README deliverables except for procuring API keys

khyberS -- 2017-11-22 13:20:23
Added Tupleable base class and moved bleeper() to Song class.

khyberS -- 2017-11-23 00:55:46
secrets.py now loads JSON from secrets.json (not in repo),
    which is just secrets_template.json with the fields filled in.

khyberS -- 2017-11-23 01:10:53
Modified ListenUpDatabase and Song to reflect new usage of musix API,
    which now returns the song id, artist, name, and lyrics.
    The primary key will no longer be autogenerated as the ROWID,
    but will be the unique song id returned by the API.
    The database will also now store the artist name, just in case it's needed.

khyberS -- 2017-11-23 02:54:00
User now also stores the set of song ids (User.songs) previously played by that user,
    just like it does for question ids.
ListenUpDatabase.next_song() now returns the next (i.e. new and unique) random song.
    If record=True is passed as an arg, then ListenUpDatabase.play_song() is called,
    which records the user playing that song in the DB.
    However, to get the next random song performantly
    (which is tough b/c the song ids are API ids and are sparse),
    a running set of song_ids in the DB has to be kept (ListenUpDatabase._song_ids).
ListenUpDatabase.add_questions() now ensures that inserted songs are completely new and unique.
    Just like ListenUpDatabase.next_song(), to do this performantly,
    a running set of questions in the DB has to be kept (ListenUpDatabase._questions).
    This is implemented in the method ListenUpDatabase._add_new_questions(),
    which keeps querying new questions from the trivia API to replace any duplicates found.

khyberS -- 2017-11-23 03:56:46
Finished QuestionOptions class for User.options field,
    which decides what kinds of questions are queried for the user,
    and which are set in the set_options() route.

khyberS -- 2017-11-24 09:47:46
Added directions to get an API key for Watson Text to Speech to the README.md.

naotakaK -- 2017-11-24 13:20:37
Added key procurement steps for musixmatch to README.md

khyberS -- 2017-11-24 16:00:12
Tested ListenUpDatabase.new_song(), which tests getting a new song and downloading the audio.
    Fixed the bugs so that it now works, except I had to hardcode the name of the song.
    The name of the song shouldn't be hardcoded anywhere,
    and if it's a parameter, where are we getting the song names from.
    Shouldn't the functions in music.py just return the top N songs
    or return a random song or something?
Added User.set_options(), which sets the user's QuestionOptions
    from a dictionary with the same field names, which can just be request.form.

khyberS -- 2017-11-24 16:30:43
Changed music.py so that get_song() returns the Nth song in rankings, where N = song_num.
    Also changed Song.random() to Song.get_song() to reflect this change.
    Also changed ListenUpDatabase.new_song() to reflect this change.

khyberS -- 2017-11-24 16:44:54
Fixed QuestionOptions.set_options() so that it throws an InvalidQuestionOptionException
    if any of the user-supplied options aren't valid.
    Added unfinished code in set_options() route to handle this.
Fixed QuestionOptions.urlencode(), which returns the query string of the options,
    so that if any option is None or '', then it is skipped in the query string,
    so that the API will use the default value.

bayanB -- 2017-11-24 16:57:44
Added customize.html again, I can't seem to find the old one I wrote. Customizes by type category and difficulty,has to be rendered in app.py

bayanB -- 2017-11-24 17:20:08
Changed the design doc to reflect our changes

bayanB -- 2017-11-25 23:03:14
Added bootstrap styling to all templates

brianL -- 2017-11-27 13:16:50
added fire emojis to readme

brianL -- 2017-11-27 13:19:51
debugging app.py in progress

brianL -- 2017-11-28 01:25:48
The links to signup and login appear to work now. Now for the questions...

khyberS -- 2017-11-28 03:10:56
Made almost everything work.  Just a few bugs and style stuff left I think.

khyberS -- 2017-11-28 15:21:06
Fixed register() route and signup.html.  Uses JS to check matching passwords.

naotakaK -- 2017-11-28 19:26:08
Added navbar, /logout is broken. Moved audio part down the page so it doesn't interfere with navbar and looks a bit cleaner.

naotakaK -- 2017-11-28 19:47:50
Fixed navbar interaction on congrats template. Lyrics are now displayed on the congrats page in case user does not hvae audio capabilities. Congrats still has padding issues that need to be fixed.

naotakaK -- 2017-11-28 21:35:13
Updated explicit word filters and changed displayed lyrics to bleeped kind

khyberS -- 2017-11-28 21:56:27
Fixed signup() route and made logout button only appear when logged in.

khyberS -- 2017-11-28 22:10:15
Made order of answer choices random so correct answer wasn't always just the first choice.

naotakaK -- 2017-11-28 22:17:51
Fixed minor bug on /login to link to /register

brianL -- 2017-11-29 01:23:19
Fixed the visibility of choose_options dropdown, added link to choose_options in welcome.

